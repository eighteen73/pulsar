@use "tools" as *;

.wp-block-columns {

	// Trump cores `.is-layout-flex` selector as it doesn't apply to columns.
	&:not([class^="are-vertically-aligned"]) {
		align-items: initial;
	}

	// Columns should always be rows unless set to stack.
	&:where(:not([class^="is-stacked-on"])) {
		flex-direction: column;
	}

	// All Columns Alignment
	&.are-vertically-aligned-top {
		align-items: flex-start;
	}

	&.are-vertically-aligned-center {
		align-items: center;
	}

	&.are-vertically-aligned-bottom {
		align-items: flex-end;
	}

	&:where(.is-reversed-when-stacked) {
		flex-direction: column-reverse;
	}

	/// The fallback stacking class.
	&:where(.is-stacked-on-sm),
	&:where(:not([class*="is-stacked-on"])) {
		@media (--sm) {
			flex-direction: row;
		}

		// Use column gap if there are only two columns.
		&.is-layout-flex:where(:has(> :nth-child(2):last-child)) {
			@media (--sm) {
				--wp--custom--spacing--block-gap: var(--wp--custom--spacing--column-gap);
			}
		}
	}

	&:where(.is-stacked-on-md) {
		@media (--md) {
			flex-direction: row;

			// Use column gap if there are only two columns.
			&.is-layout-flex:where(:has(> :nth-child(2):last-child)) {
				@media (--md) {
					--wp--custom--spacing--block-gap: var(--wp--custom--spacing--column-gap);
				}
			}
		}
	}

	&:where(.is-stacked-on-lg) {
		@media (--lg) {
			flex-direction: row;
		}

		// Use column gap if there are only two columns.
		&.is-layout-flex:where(:has(> :nth-child(2):last-child)) {
			@media (--lg) {
				--wp--custom--spacing--block-gap: var(--wp--custom--spacing--column-gap);
			}
		}
	}

	&:where(.is-stacked-on-xl) {
		@media (--xl) {
			flex-direction: row;
		}

		// Use column gap if there are only two columns.
		&.is-layout-flex:where(:has(> :nth-child(2):last-child)) {
			@media (--xl) {
				--wp--custom--spacing--block-gap: var(--wp--custom--spacing--column-gap);
			}
		}
	}
}
