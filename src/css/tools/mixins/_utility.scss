@use "../../settings" as *;

/// Add styles for dark mode.
/// Can target both prefers-color-scheme, and
/// via a data attribute on the body.
@mixin dark-mode() {
	@media (prefers-color-scheme: dark) {
		@content;
	}

	[data-mode="dark"] & {
		@content;
	}
}

/// Makes an element visually hidden, but still accessible to keyboards and assistive devices.
/// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
/// @link http://hugogiraudel.com/2016/10/13/css-hide-and-seek/
///
/// @param {Boolean} $enforce - Use `!important` on applied properties
///
@mixin hide-visually($enforce: false) {
	$important: if($enforce, "!important", null);

	border: 0 #{$important};
	clip: rect(1px, 1px, 1px, 1px) #{$important};
	clip-path: inset(50%) #{$important};
	height: 1px #{$important};
	overflow: hidden #{$important};
	padding: 0 #{$important};
	white-space: nowrap #{$important};
	width: 1px #{$important};
	word-wrap: normal #{$important};
	z-index: 100000; // Above WP toolbar
}

/// This reverses `hide-visually()`.
///
/// @param {Boolean} $enforce - Use `!important` on applied properties.
///
@mixin show-visually($enforce: false) {
	$important: if($enforce, "!important", null);

	clip: auto #{$important};
	clip-path: none #{$important};
	height: auto #{$important};
	overflow: visible #{$important};
	text-decoration: none;
	white-space: normal #{$important};
	width: auto #{$important};
	z-index: 0;
}

///
/// @mixin icon
/// @description A mixin for creating icons using a mask. Typically used with pseudo-elements.
///
/// @param {string} $icon - The name of the icon. The icon should be in the SVG format in the assets/svg directory.
/// @param {string} $size - The size of the pseudo-element (default: 16px).
/// @param {string} $color - The color of the pseudo-element (default: currentcolor).
///
/// @example Usage:
///   .my-element::after {
///     @include pseudo-icon('icon', 24px, var(--wp--custom--color--text--primary));
///   }
///
@mixin icon($icon, $size: 16px, $color: currentcolor) {
	background-color: $color;
	content: "";
	display: inline-block;
	height: $size;
	mask-position: center;
	mask-repeat: no-repeat;
	mask-size: contain;
	width: $size;

	@if $icon {
		mask-image: url("/assets/svg/#{$icon}.svg");
	}
}

/// Set the focus ring style.
/// @param {Color} $color - The color of the focus ring.
///
@mixin focus-ring($color: var(--wp--custom--color--focus)) {
	outline: 2px solid $color !important; // stylelint-disable-line declaration-no-important -- make sure the focus ring is visible
	outline-offset: 2px !important; // stylelint-disable-line declaration-no-important -- make sure the focus ring is visible
	transition: unset !important; // stylelint-disable-line declaration-no-important -- make sure the focus ring is visible
}

/// Set the focus block style.
/// @param {Color} $surface - The color of the focus block surface.
/// @param {Color} $text - The color of the focus block text.
///
@mixin focus-block(
	$surface: var(--wp--custom--color--focus),
	$text: var(--wp--custom--color--focus-accent)
) {
	&:focus-visible {
		background-color: $surface !important; // stylelint-disable-line declaration-no-important -- make sure the focus block is visible
		color: $text !important; // stylelint-disable-line declaration-no-important -- make sure the focus block is visible
		outline: none !important; // stylelint-disable-line declaration-no-important -- make sure the focus block is visible
		transition: unset !important; // stylelint-disable-line declaration-no-important -- make sure the focus block is visible
	}
}
