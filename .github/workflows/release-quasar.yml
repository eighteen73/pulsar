name: Release Quasar Version

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-quasar'

jobs:
  build-and-release:
    name: Build and Release Quasar Theme
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Assets
        run: npm run build

      - name: Prepare Release Title
        id: prep
        run: |
          TAG=${{ github.ref_name }}
          VERSION=$(echo $TAG | sed -e 's/^v//' -e 's/-quasar$//')
          TITLE="Quasar v$VERSION"
          echo "release_title=$TITLE" >> $GITHUB_ENV

      - name: Bump Theme Version
        run: |
          THEME_VERSION=$(echo "${{ github.ref_name }}" | sed -e 's/^v//' -e 's/-quasar$//')
          sed -i "s/Version: .*/Version: $THEME_VERSION/" style.css

      - name: Find and Replace Theme Name and Description
        run: |
          # Replace theme name, namespace, and text domain
          find . -type f \( -name "*.php" -o -name "style.css" \) -exec sed -i 's/Pulsar/Quasar/g' {} +
          find . -type f \( -name "*.php" -o -name "style.css" \) -exec sed -i 's/pulsar/quasar/g' {} +

          # Replace the package name in composer.json for Packagist
          sed -i 's|"eighteen73/pulsar"|"eighteen73/quasar"|g' composer.json

          # Replace the theme description using a secret
          sed -i "s/Description: .*/Description: ${{ secrets.QUASAR_DESCRIPTION }}/" style.css

      - name: Replace Theme Screenshot
        run: curl -L "${{ secrets.QUASAR_SCREENSHOT_URL }}" -o screenshot.png

      - name: Push to GitLab Distribution Repository
        env:
          # Secrets for GitLab credentials
          GITLAB_TOKEN: ${{ secrets.QUASAR_GITLAB_ACCESS_TOKEN }}
          GITLAB_URL: ${{ secrets.QUASAR_GITLAB_URL }}
          GITLAB_REPO: ${{ secrets.QUASAR_GITLAB_REPO }}

          # Secrets for the Git commit author (optional)
          GIT_USER: ${{ secrets.GIT_COMMIT_USER || 'GitHub Actions' }}
          GIT_EMAIL: ${{ secrets.GIT_COMMIT_EMAIL || 'actions@github.com' }}
        run: |
          # Configure Git
          git config --global user.name "${{ secrets.GIT_COMMIT_USER || 'GitHub Actions' }}"
          git config --global user.email "${{ secrets.GIT_COMMIT_EMAIL || 'actions@github.com' }}"

          # Clone the GitLab repository
          echo "Cloning GitLab repository..."
          git clone "https://oauth2:${{ secrets.QUASAR_GITLAB_ACCESS_TOKEN }}@${{ secrets.QUASAR_GITLAB_URL }}/${{ secrets.QUASAR_GITLAB_REPO }}" ../gitlab-repo

          # Use rsync to sync files, excluding all development-related files and folders
          echo "Syncing files to destination..."
          rsync -av --progress --delete . ../gitlab-repo/ \
            --exclude ".editorconfig" \
            --exclude ".git" \
            --exclude ".github" \
            --exclude ".gitignore" \
            --exclude ".playground" \
            --exclude "config/theme-json" \
            --exclude "node_modules" \
            --exclude "src" \
            --exclude "vendor" \
            --exclude "package.json" \
            --exclude "package-lock.json" \
            --exclude "phpcs.xml" \
            --exclude "webpack.config.js"

          # Change directory into the destination repo
          cd ../gitlab-repo

          # Commit and push the changes
          echo "Committing and tagging..."
          git add .

          if ! git diff --staged --quiet; then
            git commit -m "Release ${{ github.ref_name }}"
          else
            echo "No changes to commit."
          fi

          git tag -f ${{ github.ref_name }}

          echo "Pushing to GitLab..."
          git push origin main
          git push origin --tags -f
